body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: $color-grey-dark;
}

/* .heading-primary is more related to typography,
   but it's arguable that this could be a component as well. */
.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  /* Determines whether or not the 'back' side of a transformed
   element is visible. With an identity transform, the 'front' side
   of an element faces the viewer.
   This removes some shaky side-effects (bugs) of animation.
   */
  backface-visibility: hidden;

  margin-bottom: 6rem;

  // use nesting
  &--main {
    /* span element is by default an inline element */
    /* block elements occupy the entire width available and creates linebreak after and before them */
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /*
    animation-delay: 2s;
    animation-iteration-count: 3;
    */

    @include respond(phone) {
      letter-spacing: 1rem;
      font-size: 5rem;
    }
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.7rem;

    animation: moveInRight 1s ease-out;

    @include respond(phone) {
      letter-spacing: .5rem;
    }
  }
}

/* we want this to be reusable in different places,
so we can't set a padding-bottom/margin-bottom here */
.heading-secondary {
  font-size: 3.2rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, $color-primary-light, $color-primary-dark);
  letter-spacing: .2rem; // 2px is small, doesn't really scale, can use 2px or .2rem here

  /* clip the text on the background, text acts like a mask */
  -webkit-background-clip: text; // not finalized in chrome, so -webkit- is required for chrome
  color: transparent; // hide the text and shows the clipped background

  transition: all .2s;

  @include respond(tab-port) {
    font-size: 2.4rem;
  }
  @include respond(phone) {
    font-size: 1.8rem;
  }

  &:hover {
    transform: skewX(-15deg) scale(1.1);
    text-shadow: 2rem .5rem 2rem rgba($color-black, .2);
  }
}

.heading-tertiary {
  font-size: $font-size-default;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: $font-size-default;
  &:not(:last-child) {
    /* we usually want margin-bottom after a paragraph,
    so we should make margin-bottom as a part of the paragraph component,
    instead of using a utility class to add bottom margin*/
    margin-bottom: 3rem;
  }
}