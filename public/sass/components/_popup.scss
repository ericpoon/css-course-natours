.popup {
  position: fixed;
  width: 100%;
  height: 100vh;
  top: 0;
  left: 0;
  z-index: 99;
  background-color: rgba($color-black, .8);

  // initial state before open
  opacity: 0;
  visibility: hidden;
  transition: all .3s;

  &__content {
    @include absCenter;

    width: 75%;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem rgba($color-black, .4);
    border-radius: .3rem;
    overflow: hidden; // prevent the images in left side overlapping the round border

    // trick: make two boxes side-by-side have the same height, parent should display as table
    display: table;

    // initial state before open
    opacity: 0;
    transform: translate(-50%, -50%) scale(.3); // this overrides the transform property in mixin absCenter
    transition: all .4s .2s; // delay .2s so as to wait for the black background fading in first
  }

  &__left {
    width: 33.33%;

    // trick: make two boxes side-by-side have the same height, children should display as table-cell
    display: table-cell;
    /* to align content in the vertical center,
       so even if technically they don't have the same height,
       visually they do */
    vertical-align: middle; // can be top or bottom as well
  }

  &__right {
    width: 66.67%;

    // trick: make two boxes side-by-side have the same height, children should display as table-cell
    display: table-cell;
    vertical-align: middle;

    padding: 3rem 5rem;
  }

  &__image {
    display: block;
    width: 100%;
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;

    -moz-column-count: 2;
    -moz-column-gap: 4rem; // by default it's 1em, which is 14px as the font-size is 1.4rem here
    -moz-column-rule: 1px solid $color-grey-light-2;

    column-count: 2;
    column-gap: 4rem; // by default it's 1em, which is 14px as the font-size is 1.4rem here
    column-rule: 1px solid $color-grey-light-2;

    -moz-hyphens: auto;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto; // be default it's none

    /* in practice, we should not add prefix by ourselves,
       but we should use some tools to automatically generate them */
  }

  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      line-height: 1; // remove extra space
      transition: all .3s;
    }
    &:hover {
      color: $color-secondary-dark;
    }
  }

  // OPEN STATES

  /* applied to the element
     which is the target when we click a button or when the url changes */
  &:target {
    opacity: 1;
    visibility: visible;
  }

  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@include respond(tab-port) {
  .popup {
    &__content {
      width: 90%;
      display: block;
    }

    &__left {
      width: 100%;
      display: block;
    }

    &__right {
      width: 100%;
      display: block;
    }

    &__image {
      display: inline-block;
      width: 50%;
      float: left;
    }

    &__close {
      &:link,
      &:visited {
        top: 1rem;
        right: 1.5rem;
      }
    }
  }
}

@include respond(phone) {
  .popup {
    &__content {
      width: 90%;
      display: block;
    }

    &__left {
      width: 100%;
      display: block;
    }

    &__right {
      width: 100%;
      display: block;
    }

    &__image {
      display: none;
    }

    &__text {
      -moz-column-count: 1;
      column-count: 1;
      margin-bottom: 2rem;
    }

    &__close {
      &:link,
      &:visited {
        top: 1rem;
        right: 1.5rem;
      }
    }
  }
}