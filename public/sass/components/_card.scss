.card {
  -moz-perspective: 100rem; // for firefox (this is a new property)
  perspective: 100rem;
  position: relative;
  /* the *parent will collapse* if children are absolutely positioning,
  so we need to specify *the same height as children* for the parent element */
  height: 52rem;

  &__side {
    height: 52rem;
    transition: all .8s ease;
    position: absolute; // when use absolute position, always give its parent a relative position
    top: 0;
    left: 0;
    width: 100%;

    -webkit-backface-visibility: hidden; // Safari needs this prefix
    backface-visibility: hidden; // hide the back face of an element

    border-radius: .3rem;
    overflow: hidden; // prevents the image in it from overflowing and hide the border radius

    box-shadow: 0 1.5rem 4rem rgba($color-black, .2);

    &--back {
      transform: rotateY(-180deg);

      &-color-primary {
        background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
      }
      &-color-secondary {
        background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
      }
      &-color-tertiary {
        background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark);
      }
    }
  }

  &:hover &__side--front {
    /* as there are two sides, we have to rotate a child in the card instead of rotating card itself
    but this also prevents hover being triggered multiple times,
    try rotate the parent directly instead and see the issue */
    transform: rotateY(180deg);
  }

  &:hover &__side--back {
    transform: rotateY(0);
  }

  // ---------- CONTENT ON FRONT SIDE ----------
  &__picture {
    background-size: cover;
    height: 23rem; // came to this number by experimentation
    background-blend-mode: screen; // blending like Photoshop
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);

    &--primary { // can only blend two images with background image, so we don't use <img> element here
      background-image: linear-gradient(
              to right bottom,
              $color-primary-light,
              $color-primary-dark),
      url(../img/nat-6.jpg);
    }

    &--secondary {
      background-image: linear-gradient(
              to right bottom,
              $color-secondary-light,
              $color-secondary-dark),
      url(../img/nat-5.jpg);
    }

    &--tertiary {
      background-image: linear-gradient(
              to right bottom,
              $color-tertiary-light,
              $color-tertiary-dark),
      url(../img/nat-7.jpg);
    }
  }

  &__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: $color-white;
    text-align: right;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 70%;

    z-index: 1; // prevents the heading being clipped by clip-path in __picture
  }

  &__heading-span { // not an element of modifier of heading, so don't put this in heading
    padding: .7rem 1.5rem;

    /* treated as if the two lines of text were two different elements,
    so we have padding at the beginning and end of each line */
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; // 'clone': applies all the properties defined for the elements to each and every box

    &--primary {
      background-image: linear-gradient(
              to right bottom,
              rgba($color-primary-light, .85),
              rgba($color-primary-dark, .85)
      );
    }

    &--secondary {
      background-image: linear-gradient(
              to right bottom,
              rgba($color-secondary-light, .85),
              rgba($color-secondary-dark, .85)
      );
    }

    &--tertiary {
      background-image: linear-gradient(
              to right bottom,
              rgba($color-tertiary-light, .85),
              rgba($color-tertiary-dark, .85)
      );
    }
  }

  &__details {
    padding: 3rem;

    ul { // prevents from using too many different classes (no need for card__list)
      list-style: none;
      width: 80%;
      margin: 0 auto; // *easiest way to center a block element inside a block element*

      li { // prevents from using too many different classes (no need for card__list-item)
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;

        &:not(:last-child) {
          border-bottom: 1px solid $color-grey-light-2;
        }

      }
    }
  }

  // ---------- CONTENT ON BACK SIDE ----------
  &__call-to-action {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    color: white;
    width: 90%;
  }
  &__price-only {
    font-size: 1.5rem;
    text-transform: uppercase;
  }
  &__price-value {
    font-size: 6rem;
    font-weight: 100;
  }
}

//@include respond(tab-port) {
@media only screen and (max-width: 56.25em), // 900px
       /* touch device has no mouse and cannot hover, the opposite value is (hover: hover) */
       only screen and (hover: none) { // optimize for large screen mobile device (e.g. iPad Pro)


  // re-style the card completely
  .card {
    height: auto;
    position: relative;
    box-shadow: 0 1.5rem 4rem rgba($color-black, .2);

    &__side {
      height: auto;
      transition: all 0s;
      position: relative;
      top: 0;
      left: 0;
      width: 100%;

      box-shadow: none;

      &--back {
        margin-top: -1rem;
        transform: rotateY(0);
        -webkit-clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);
        clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);
      }
    }
    &:hover &__side--front {
      transform: rotateY(0);
    }

    &__heading {
      top: 14rem;
    }
    &__details {
      padding: 0 1rem 1rem 1rem;
    }
    &__call-to-action {
      position: relative;
      top: 0;
      left: 0;
      transform: translate(0);
      width: 100%;
      padding: 2.5rem 0;
    }
    &__price-only {
      display: none;
    }
  }
}