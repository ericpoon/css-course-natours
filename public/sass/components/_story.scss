.story {
  width: 75%;
  margin: 0 auto; // center a block elem inside a block elem
  box-shadow: 0 3rem 6rem rgba($color-black, .1);
  background-color: rgba($color-white, .6);
  border-radius: .3rem;
  padding: 6rem;
  padding-left: 9rem;
  /* let the paragraph inherits this,
  but the heading will not as we have specified font-size for the heading */
  font-size: $font-size-default;

  transform: skewX(-12deg);

  /* this doesn't work as expected, as there's another transform property in &__shape,
     one of the two transform properties will override the other,
     so we have to do this separately
  & > * {
    transform: skewX(12deg);
  }
  */

  @include respond(tab-port) {
    width: 100%;
    padding: 4rem;
    padding-left: 6rem;
  }
  @include respond(phone) {
    transform: skewX(0);
    padding: 3rem;
    padding-left: 4rem;
  }

  &__shape-box {
    width: 15rem;
    height: 15rem;
    float: left;

    // make the shape a circle (it doesn't display like a circle though)
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%); // to use this, the element must be floated and have defined width and height

    // make it display as a circle
    clip-path: circle(50% at 50% 50%);

    transform: translateX(-3rem) skewX(12deg);

    position: relative;

    // remove side-effect/bug before, during and after hover effect
    overflow: hidden;

    @include respond(tab-port) {
      transform: translateX(-2rem) skewX(12deg);
    }
    @include respond(phone) {
      transform: translateX(-1rem) skewX(0);
    }
  }

  &__text-box {
    transform: skewX(12deg);

    @include respond(phone) {
      transform: skewX(0);
    }
  }

  &__image {
    height: 100%; // as this image has width > height, so we set height: 100% here
    transform: translateX(calc(-50% + 7.5rem)) scale(1.2); // center the image
    transition: all .5s;

    /* no longer necessary, without this it still works well in chrome
       this was used to fix some weird side-effects */
    // backface-visibility: hidden;

    // TRICKS: set the initial filter value to avoid shaky side-effect/bug after hover effect
    filter: brightness(100%) blur(0); // bug note: filter: blur(0) brightness(100%) doesn't work, order matters here
  }

  &__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 10%); // for hover animation, translateY is 10%
    text-align: center;
    color: $color-white;
    text-transform: uppercase;
    font-size: 1.7rem;
    opacity: 0;
    transition: all .5s;

    /* no longer necessary, without this it still works well in chrome
       this was used to fix some weird side-effects */
    // backface-visibility: hidden;
  }

  &:hover &__caption {
    transform: translate(-50%, -50%);
    opacity: 1;
  }

  &:hover &__image {
    transform: translateX(calc(-50% + 7.5rem)) scale(1); // translateX should be the same as above
    filter: brightness(80%) blur(3px); // bug note: if we put blur() before brightness(), animation transition will fail
  }

}