@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER

/*
0 - 600px        Phone
600 - 900px      Tablet portrait
900 - 1200px     Tablet landscape
1200 - 1800px    Desktop (where our normal style applies)
1800px +         Big desktop
*/

//@mixin respond-phone {
//  @media (max-width: 600px) { @content }
//}

/*
$breakpoint argument choices:
 - phone
 - tab-port
 - tab-land
 - big-desktop

Order of add responsive design: base + typography --> general layout (grid) --> page layout --> components
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    /* want media queries happen according to user's browser font size,
       so we don't use px as unit here, but em;
       also note that 'font-size: 62.5%;' doesn't have effect in media queries,
       1em or 1rem is always the browser font size (by default 16px);
       based on experiment, it's better to use 'em' rather than 'rem' in media queries
    */
    @media only screen and (max-width: 37.5em) { @content } // 600px
    /* use 'only screen' so the media query only applies to screen,
       e.g. not applies if someone is printing out the web page */
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) { @content } // 900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) { @content } // 1200px
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) { @content } // 1800px
  }
}

// TO TEST RESPONSIVE DESIGN: https://sizzy.co