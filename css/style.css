/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*
browsers are getting better and better
so now we don't need normalize.css for cross browser reset
we can just simply use the universal selector to do it
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/*
body is the parent of all the other elements
and font properties are usually inherited
so they will be applied to all child elements
this is more efficient and better practice, compared to putting all in universal selector
everything related to font we always specify here
*/
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px; /* to make entire body has a white border */
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 131, 0.8)
  ), url(../img/hero.jpg);
  background-size: cover; /* cover means always try to fit */
  background-position: top; /* the fixed edge of the image */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* can use online css clip-path maker */

  position: relative; /* if child elements are positioned using 'absolute', this will be the origin */
}

/* difference between viewport height and percentage
viewport size is the browser window size which includes scrollbar
while % is the actual element w/h
also, vw/vh refers to viewport size no matter how nested the element is
in short,
for width, % may be better (so don't worry about scrollbar)
for height, vh may be better (can't make an element 100% height with %)
reference: https://bitsofco.de/viewport-vs-percentage-units/
*/

.logo-box {
  position: absolute;
  top: 40px; /* count from the first relative-positioned ancestor */
  left: 40px;
}

.logo {
  /* the width will scale accordingly,
   can also control width and let browser figure out the height as well */
  height: 35px;
}

.text-box {
  position: absolute;
  top: 40%; /* move it tiny bit upper so we use 40% instead of 50% */
  left: 50%; /* 50% here refers to the parent's height/width */
  transform: translate(-50%, -50%); /* 50% here refers to the h/w of itself */
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
}

.heading-primary-main {
  /* span element is by default an inline element */
  /* block elements occupy the entire width available and creates linebreak after and before them */
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
}
